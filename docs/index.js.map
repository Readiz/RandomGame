{"version":3,"file":"index.js","sources":["../node_modules/svelte/internal/index.mjs","../node_modules/svelte/store/index.mjs","../src/store.js","../src/utils.js","../src/WeaponImage.svelte","../src/Durability.svelte","../src/PlayerCard.svelte","../node_modules/svelte/motion/index.mjs","../src/WeaponImageSimple.svelte","../src/PlayerCardSimple.svelte","../src/index.svelte","../src/index.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.29.4' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from 'svelte/store';\n\nexport const GameLifeCycle = {\n    NotStated: 0,\n    Started: 1,\n    GameOver: 2\n};\nexport const GameState = writable(GameLifeCycle.NotStated);\nexport const GameAutoProcess = writable(0);\nexport const CharTypes = [\n    { id: 0, name: '랜덤', desc: '랜덤으로 강화를 시도할 캐릭터를 고릅니다.' },\n    { id: 1, name: '흑우', desc: '보통의 무기 내구도(3회)와 보통의 강화보장(+3), 평범한 운을 가진 캐릭터' },\n    { id: 2, name: '주유', desc: '강화 보장이 높습니다(+5). 하지만 무기 내구도가 약간 낮습니다(2회).' },\n    { id: 3, name: '예리한 태성', desc: '강화 성공시 50%의 확률로 대성공 합니다(대성공시 추가로 1강 증가). 하지만 강화에 한번이라도 실패하면 게임오버(=강화 내구도 1) 입니다.' },\n    { id: 4, name: '곽철용', desc: '무기 내구도가 2배(6회)입니다. 하지만 강화 보장이 0이며, 강화 확률이 기본 확률 대비 80% 입니다.' },\n    { id: 5, name: '벤자민', desc: '11강에서 시작합니다. 다른캐릭터와 반대로 강화수치가 적용됩니다(성공시 감소, 대실패시 증가). 높은 강화상태일수록 성공률이 높습니다.'}\n];\nexport const GameSummary = writable({});\n","export function randomRange(n1, n2) {\n  return Math.floor(Math.random() * (n2 - n1 + 1) + n1);\n};\n\n","<script>\n    export let step = 0;\n    let width = 50;\n    let path = '';\n    let desc = '';\n    $: width = 50 + (step * 4);\n    $: ((step) => {\n        path = './' + ((step < 11)? step : 11) + '.png';\n        switch (step) {\n            case 0:\n                desc = '단검';\n                break;\n            case 1:\n                desc = '단도';\n                break;\n            case 2:\n                desc = '검';\n                break;\n            case 3:\n                desc = '시퍼런 검';\n                break;\n            case 4:\n                desc = '용사의 검';\n                break;\n            case 5:\n                desc = '이터널 러브';\n                break;\n            case 6:\n                desc = '아이스 소드'\n                break;\n            case 7:\n                desc = '에메랄드 소드'\n                break;\n            case 8:\n                desc = '지옥의 검'\n                break;\n            case 9:\n                desc = '레드 세이버'\n                break;\n            case 10:\n                desc = '그린 세이버'\n                break;\n            case 11:\n            case 12:\n            case 13:\n            case 14:\n            case 15:\n            case 16:\n            case 17:\n            case 18:\n            case 19:\n            case 20:\n                desc = '블루 세이버'\n                break;\n        }\n    })(step);\n\n</script>\n<style>\n    div {\n        display: inline-block;\n        vertical-align: middle;\n        width: 100px;\n        height: 100px;\n        text-align: center;\n        line-height: 100px;\n    }\n</style>\n\n<div>\n<!-- Image source: https://www.gdunlimited.net/resources/cat/rpg-maker-xp/icons/2/comments/desc/96 -->\n<img src={path} width={width} alt={desc} />\n</div>\n<br>\n{#if step === 0}\n<h6>{desc}</h6>\n{:else}\n<h6><b>+{step}</b> {desc}</h6>\n{/if}\n","<script>\n    export let durability = 3;\n    let durabilityText = '';\n    $: ((durability) => {\n        let text ='';\n        for (let i = 0; i < durability; i++) {\n            text += '■';\n        }\n        durabilityText = text;\n        if (durability === 0) {\n            text = '없음';\n        }\n    })(durability);\n</script>\n\n<small>\n<b>HP</b> {durabilityText}\n</small>\n","<script>\n  import {\n    GameState,\n    GameLifeCycle,\n    GameAutoProcess,\n    GameSummary,\n    CharTypes,\n  } from \"./store\";\n  import { randomRange } from './utils';\n  import WeaponImage from \"./WeaponImage.svelte\";\n  import Durability from \"./Durability.svelte\";\n  export let playerInfo = {\n    uid: 0,\n    id: 0,\n    name: \"\",\n    charType: 0,\n    enhanceDurability: 3,\n    enhanceWarranty: 3,\n    weaponEnhance: 0,\n    highlight: false,\n    gameOver: false,\n  };\n  let highlight = false;\n  export let GameLog = [];\n  export let isAllGameOvered = false;\n  export let handleGameOver = () => {\n    // do nothing on default\n  };\n  export let isGameStarted = false;\n  export let gameMode = -1; // -1: 표준\n  export let forceChar = 0;\n  $: if (gameMode === 0) playerInfo.charType = 0;\n     else if (gameMode === 1 || gameMode === 2) playerInfo.charType = forceChar;\n  let stepSuccessProb = 1.0;\n  const EnhanceState = {\n    Failed: \"Failed\",\n    BigFailed: \"BigFailed\",\n    Success: \"Success\",\n    BigSuccess: \"BigSuccess\",\n    NothingHappened: \"NothingHappened\",\n  };\n  let recentState = EnhanceState.NothingHappened;\n  let name = \"\";\n  $: name = CharTypes[playerInfo.charType].name;\n  GameState.subscribe((value) => {\n    if (value === GameLifeCycle.Started) {\n      startGame();\n    } else {\n      endGame();\n    }\n  });\n  GameAutoProcess.subscribe((value) => {\n    if (isGameStarted && value > 0) {\n      handleEnhancement();\n    }\n    if (playerInfo.gameOver) {\n      highlight = playerInfo.highlight;\n    } else {\n      highlight = false;\n    }\n  });\n  function startGame() {\n    // 0번의 경우 랜덤 캐릭터이므로\n    if (playerInfo.charType === 0) {\n      playerInfo.charType = randomRange(1, CharTypes.length - 1);\n    }\n    if (playerInfo.charType === 2) {\n      // 주유\n      playerInfo.enhanceDurability = 2;\n      playerInfo.enhanceWarranty = 5;\n    }\n    if (playerInfo.charType === 3) {\n      // 태성\n      playerInfo.enhanceDurability = 1;\n    }\n    if (playerInfo.charType === 4) {\n      // 곽철용\n      playerInfo.enhanceDurability = 6;\n      playerInfo.enhanceWarranty = 0;\n      stepSuccessProb = 0.8;\n    }\n    if (playerInfo.charType === 5) {\n      // 벤자민\n      playerInfo.weaponEnhance = 11;\n      playerInfo.enhanceDurability = 3;\n      playerInfo.enhanceWarranty = 0;\n      stepSuccessProb = 1;\n    }\n    GameLog.push(`${playerInfo.name}의 캐릭터는 ${CharTypes[playerInfo.charType].name}입니다.`);\n  }\n  function endGame() {\n    // ToDO\n  }\n  function handleEnhancement() {\n    if (playerInfo.gameOver) {\n      return;\n    }\n\n    if (\n      playerInfo.weaponEnhance < playerInfo.enhanceWarranty || // 강화 보장 구간이거나\n      randomRange(1, 100) <= stepSuccessProb * 100\n    ) {\n      if (playerInfo.weaponEnhance < playerInfo.enhanceWarranty) {\n        GameLog.push(`${playerInfo.name}, 강화 보장 구간이기 때문에 강화에 성공 하였습니다! 강화도 +1!`);\n      } else {\n        GameLog.push(`${playerInfo.name}, ${Math.round(stepSuccessProb * 100)}%의 확률을 뚫고 강화에 성공 하였습니다! 강화도 +1!`);\n      }\n      // 태성 전용: 50% 확률로 대성공\n      if (playerInfo.charType === 3 && randomRange(1, 100) <= 50) {\n        recentState = EnhanceState.BigSuccess;\n        playerInfo.weaponEnhance += 2; // 강화 수치 추가 Up\n        GameLog.push(`   - 예리한 태성은 예리한 기운을 받아 성공을 대성공으로 만들었습니다! 강화도 +1 추가!`);\n      } else if (playerInfo.charType === 5) {\n        // 벤자민 전용: 성공시 강화도 감소\n        recentState = EnhanceState.Success;\n        playerInfo.weaponEnhance--; // 강화 수치 Down\n        if (playerInfo.weaponEnhance < 0) playerInfo.weaponEnhance = 0; // 음수 방지..\n        GameLog.push(`   - 일 줄 알았지만, 벤자민의 강화는 거꾸로 갑니다! 강화도는 증가하지 않고 감소됩니다! 강화도 -1!`);\n      } else {\n        // 확률로 성공~!\n        recentState = EnhanceState.Success;\n        playerInfo.weaponEnhance++; // 강화 수치 Up\n      }\n      GameLog.push(`   - 무기 강화도: +${playerInfo.weaponEnhance}`);\n    } else {\n      // 실패~!\n      playerInfo.enhanceDurability -= 1; // 내구도 깎자~~\n      GameLog.push(`${playerInfo.name}, ${Math.round(stepSuccessProb * 100)}%의 확률을 뚫지 못하여 강화에 실패 하였습니다..`);\n      if (randomRange(1, 100) <= 50 && playerInfo.weaponEnhance > 0) {\n        recentState = EnhanceState.BigFailed;\n        GameLog.push(`   - 손이 미끄러져서 강화에 대실패 하였습니다! 강화도 -1!`);\n        if (playerInfo.charType === 5) {\n          // 벤자민 전용: 대실패시 강화도 증가\n          playerInfo.weaponEnhance += 1; // 강화 수치 Up\n          GameLog.push(`   - 일 줄 알았지만, 벤자민의 강화는 거꾸로 갑니다! 강화도는 감소되지 않고 증가합니다! 강화도 +1!`);\n        } else {\n          playerInfo.weaponEnhance -= 1; // 50% 확률로 강화도 깎자~\n          if (playerInfo.weaponEnhance < 0) playerInfo.weaponEnhance = 0; // 음수 방지.. (강보 때문에 이럴 일은 없긴 함)\n        }\n        if (playerInfo.enhanceDurability !== 0) // 어차피 마지막이면 강화도 보여주니 이외의 경우에만 출력\n          GameLog.push(`   - 무기 강화도: +${playerInfo.weaponEnhance}`);\n      } else {\n        recentState = EnhanceState.Failed;\n      }\n      if (playerInfo.enhanceDurability === 0) {\n        // 강화 내구도 다 되었고 실패.. gameover...\n        playerInfo.gameOver = true;\n        GameLog.push(`   - 내구도가 모두 소모되어 Game Over!`);\n        GameLog.push(`   - 최종 달성 무기 강화도: +${playerInfo.weaponEnhance}`);\n      } else {\n        GameLog.push(`   - 남은 무기 내구도: ${playerInfo.enhanceDurability}`);\n      }\n    }\n\n    // 다음 단계 확률 계산!\n    if (playerInfo.weaponEnhance < 10) {\n      // 1 ~ 2강: 100%, 3강: 90%, 4강: 80%, 5강: 70%, 6강: 60%, 7강: 50%, 8강: 40%, ... \n      stepSuccessProb = 1 - (playerInfo.weaponEnhance - 2) * 0.1;\n      if (stepSuccessProb > 1) stepSuccessProb = 1;\n    } else { // 10강 이상은 1% 확률로 고정\n      stepSuccessProb = 0.01;\n    }\n    if (playerInfo.charType === 4) stepSuccessProb *= 0.8;\n    else if (playerInfo.charType === 5) { // 벤자민은 확률이 반대개념\n      stepSuccessProb = 1 - (11 - playerInfo.weaponEnhance) * 0.1;\n      if (stepSuccessProb > 1) stepSuccessProb = 1;\n      if (stepSuccessProb < 0.1) stepSuccessProb = 0.1;\n    }\n  }\n  $: ((gameOver) => {\n    if (gameOver) {\n      handleGameOver();\n    }\n  })(playerInfo.gameOver);\n  $: $GameSummary[playerInfo.id] = playerInfo.weaponEnhance;\n  let me;\n</script>\n\n<style>\n  div.playerContainer {\n    display: inline-block;\n    border: 1px solid black;\n    border-radius: 5px;\n    margin: 2px;\n    width: 140px;\n    text-align: center;\n  }\n  div.playerContainer[highlight=\"true\"] {\n    border: 3px solid red;\n    opacity: 1 !important;\n  }\n  div.playerContainer[isAllGameOvered=\"true\"] {\n    opacity: 0.5;\n  }\n  div.playerContainer[recentState=\"BigSuccess\"] {\n    background-color: cadetblue;\n  }\n  div.playerContainer[recentState=\"Success\"] {\n    background-color: yellowgreen;\n  }\n  div.playerContainer[recentState=\"Failed\"] {\n    background-color: burlywood;\n  }\n  div.playerContainer[recentState=\"BigFailed\"] {\n    animation: shake 0.5s;\n    background-color: palevioletred;\n  }\n  div.playerContainer[isAutoPlaying=\"true\"] {\n    /* Start the shake animation and make the animation last for 0.5 seconds */\n    animation: shake 0.5s;\n\n    /* When the animation is finished, start again */\n    animation-iteration-count: infinite;\n  }\n  div.btn {\n    width: 100%;\n  }\n  div.btn small {\n    line-height: 2.5;\n    font-size: small;\n  }\n\n  @keyframes shake {\n    0% {\n      transform: translate(1px, 1px) rotate(0deg);\n    }\n    10% {\n      transform: translate(-1px, -2px) rotate(-1deg);\n    }\n    20% {\n      transform: translate(-3px, 0px) rotate(1deg);\n    }\n    30% {\n      transform: translate(3px, 2px) rotate(0deg);\n    }\n    40% {\n      transform: translate(1px, -1px) rotate(1deg);\n    }\n    50% {\n      transform: translate(-1px, 2px) rotate(-1deg);\n    }\n    60% {\n      transform: translate(-3px, 1px) rotate(0deg);\n    }\n    70% {\n      transform: translate(3px, 1px) rotate(-1deg);\n    }\n    80% {\n      transform: translate(-1px, -1px) rotate(1deg);\n    }\n    90% {\n      transform: translate(1px, 2px) rotate(0deg);\n    }\n    100% {\n      transform: translate(1px, -2px) rotate(-1deg);\n    }\n  }\n</style>\n\n<div\n  bind:this={me}\n  class=\"playerContainer\"\n  highlight={highlight}\n  {recentState}\n  isAllGameOvered={isAllGameOvered && isGameStarted}\n  isAutoPlaying={$GameAutoProcess > 0 && isGameStarted && !playerInfo.gameOver}>\n  {#if !isGameStarted}\n    <input class=\"form-control\" bind:value={playerInfo.name} />\n  {:else}\n    <b>{playerInfo.name}</b>\n    <br />\n    {name}\n    <img\n      src={'./c' + playerInfo.charType + '.png'}\n      width=\"20\"\n      height=\"20\"\n      alt=\"\" />\n  {/if}\n  {#if !isGameStarted}\n    {#if gameMode == 2}\n      <img\n        src={'./c0.png'}\n        width=\"100\"\n        height=\"100\"\n        alt=\"\" />\n      <br />\n      동일랜덤\n    {:else}\n      <img\n        src={'./c' + playerInfo.charType + '.png'}\n        width=\"100\"\n        height=\"100\"\n        alt=\"\" />\n      <br />\n      {#if gameMode == -1}\n      <label>\n        <select class=\"form-control\" bind:value={playerInfo.charType}>\n          {#each CharTypes as charType}\n            <option value={charType.id}>{charType.name}</option>\n          {/each}\n        </select>\n      </label>\n      {:else}\n        {CharTypes[playerInfo.charType].name}\n      {/if}\n    {/if}\n  {/if}\n\n  {#if isGameStarted}\n    <WeaponImage step={playerInfo.weaponEnhance} />\n    {#if isGameStarted && playerInfo.gameOver}\n    <!-- 게임 오버 메시지 --><br />\n    {/if}\n\n    {#if isGameStarted && !playerInfo.gameOver}\n      <Durability durability={playerInfo.enhanceDurability} />\n      <br />\n      {#if $GameAutoProcess === 0}\n        <div class=\"btn btn-lg btn-warning\" on:click={handleEnhancement}>\n          {#if playerInfo.enhanceWarranty > playerInfo.weaponEnhance || stepSuccessProb == 1}\n            <small><b>강화!</b> 보장 구간</small>\n          {:else}\n            <small><b>강화!</b> 확률: {Math.round(stepSuccessProb * 100)}%</small>\n          {/if}\n        </div>\n      {/if}\n    {/if}\n  {/if}\n</div>\n","import { writable } from '../store';\nimport { now, loop, assign } from '../internal';\nimport { linear } from '../easing';\n\nfunction is_date(obj) {\n    return Object.prototype.toString.call(obj) === '[object Date]';\n}\n\nfunction tick_spring(ctx, last_value, current_value, target_value) {\n    if (typeof current_value === 'number' || is_date(current_value)) {\n        // @ts-ignore\n        const delta = target_value - current_value;\n        // @ts-ignore\n        const velocity = (current_value - last_value) / (ctx.dt || 1 / 60); // guard div by 0\n        const spring = ctx.opts.stiffness * delta;\n        const damper = ctx.opts.damping * velocity;\n        const acceleration = (spring - damper) * ctx.inv_mass;\n        const d = (velocity + acceleration) * ctx.dt;\n        if (Math.abs(d) < ctx.opts.precision && Math.abs(delta) < ctx.opts.precision) {\n            return target_value; // settled\n        }\n        else {\n            ctx.settled = false; // signal loop to keep ticking\n            // @ts-ignore\n            return is_date(current_value) ?\n                new Date(current_value.getTime() + d) : current_value + d;\n        }\n    }\n    else if (Array.isArray(current_value)) {\n        // @ts-ignore\n        return current_value.map((_, i) => tick_spring(ctx, last_value[i], current_value[i], target_value[i]));\n    }\n    else if (typeof current_value === 'object') {\n        const next_value = {};\n        for (const k in current_value)\n            // @ts-ignore\n            next_value[k] = tick_spring(ctx, last_value[k], current_value[k], target_value[k]);\n        // @ts-ignore\n        return next_value;\n    }\n    else {\n        throw new Error(`Cannot spring ${typeof current_value} values`);\n    }\n}\nfunction spring(value, opts = {}) {\n    const store = writable(value);\n    const { stiffness = 0.15, damping = 0.8, precision = 0.01 } = opts;\n    let last_time;\n    let task;\n    let current_token;\n    let last_value = value;\n    let target_value = value;\n    let inv_mass = 1;\n    let inv_mass_recovery_rate = 0;\n    let cancel_task = false;\n    function set(new_value, opts = {}) {\n        target_value = new_value;\n        const token = current_token = {};\n        if (value == null || opts.hard || (spring.stiffness >= 1 && spring.damping >= 1)) {\n            cancel_task = true; // cancel any running animation\n            last_time = now();\n            last_value = new_value;\n            store.set(value = target_value);\n            return Promise.resolve();\n        }\n        else if (opts.soft) {\n            const rate = opts.soft === true ? .5 : +opts.soft;\n            inv_mass_recovery_rate = 1 / (rate * 60);\n            inv_mass = 0; // infinite mass, unaffected by spring forces\n        }\n        if (!task) {\n            last_time = now();\n            cancel_task = false;\n            task = loop(now => {\n                if (cancel_task) {\n                    cancel_task = false;\n                    task = null;\n                    return false;\n                }\n                inv_mass = Math.min(inv_mass + inv_mass_recovery_rate, 1);\n                const ctx = {\n                    inv_mass,\n                    opts: spring,\n                    settled: true,\n                    dt: (now - last_time) * 60 / 1000\n                };\n                const next_value = tick_spring(ctx, last_value, value, target_value);\n                last_time = now;\n                last_value = value;\n                store.set(value = next_value);\n                if (ctx.settled)\n                    task = null;\n                return !ctx.settled;\n            });\n        }\n        return new Promise(fulfil => {\n            task.promise.then(() => {\n                if (token === current_token)\n                    fulfil();\n            });\n        });\n    }\n    const spring = {\n        set,\n        update: (fn, opts) => set(fn(target_value, value), opts),\n        subscribe: store.subscribe,\n        stiffness,\n        damping,\n        precision\n    };\n    return spring;\n}\n\nfunction get_interpolator(a, b) {\n    if (a === b || a !== a)\n        return () => a;\n    const type = typeof a;\n    if (type !== typeof b || Array.isArray(a) !== Array.isArray(b)) {\n        throw new Error('Cannot interpolate values of different type');\n    }\n    if (Array.isArray(a)) {\n        const arr = b.map((bi, i) => {\n            return get_interpolator(a[i], bi);\n        });\n        return t => arr.map(fn => fn(t));\n    }\n    if (type === 'object') {\n        if (!a || !b)\n            throw new Error('Object cannot be null');\n        if (is_date(a) && is_date(b)) {\n            a = a.getTime();\n            b = b.getTime();\n            const delta = b - a;\n            return t => new Date(a + t * delta);\n        }\n        const keys = Object.keys(b);\n        const interpolators = {};\n        keys.forEach(key => {\n            interpolators[key] = get_interpolator(a[key], b[key]);\n        });\n        return t => {\n            const result = {};\n            keys.forEach(key => {\n                result[key] = interpolators[key](t);\n            });\n            return result;\n        };\n    }\n    if (type === 'number') {\n        const delta = b - a;\n        return t => a + t * delta;\n    }\n    throw new Error(`Cannot interpolate ${type} values`);\n}\nfunction tweened(value, defaults = {}) {\n    const store = writable(value);\n    let task;\n    let target_value = value;\n    function set(new_value, opts) {\n        if (value == null) {\n            store.set(value = new_value);\n            return Promise.resolve();\n        }\n        target_value = new_value;\n        let previous_task = task;\n        let started = false;\n        let { delay = 0, duration = 400, easing = linear, interpolate = get_interpolator } = assign(assign({}, defaults), opts);\n        if (duration === 0) {\n            if (previous_task) {\n                previous_task.abort();\n                previous_task = null;\n            }\n            store.set(value = target_value);\n            return Promise.resolve();\n        }\n        const start = now() + delay;\n        let fn;\n        task = loop(now => {\n            if (now < start)\n                return true;\n            if (!started) {\n                fn = interpolate(value, new_value);\n                if (typeof duration === 'function')\n                    duration = duration(value, new_value);\n                started = true;\n            }\n            if (previous_task) {\n                previous_task.abort();\n                previous_task = null;\n            }\n            const elapsed = now - start;\n            if (elapsed > duration) {\n                store.set(value = new_value);\n                return false;\n            }\n            // @ts-ignore\n            store.set(value = fn(easing(elapsed / duration)));\n            return true;\n        });\n        return task.promise;\n    }\n    return {\n        set,\n        update: (fn, opts) => set(fn(target_value, value), opts),\n        subscribe: store.subscribe\n    };\n}\n\nexport { spring, tweened };\n","<script>\n    export let step = 0;\n    let width = 50;\n    let path = '';\n    let desc = '';\n    $: width = 13 + (step * 0.5);\n    $: ((step) => {\n        path = './' + ((step < 11)? step : 11) + '.png';\n    })(step);\n</script>\n<style>\n\n</style>\n\n<!-- Image source: https://www.gdunlimited.net/resources/cat/rpg-maker-xp/icons/2/comments/desc/96 -->\n<img src={path} width={width} alt={desc} />\n","<script>\n  import { GameSummary, GameAutoProcess } from './store';\n  import { tweened } from 'svelte/motion';\n  import WeaponImageSimple from './WeaponImageSimple.svelte';\n  export let playerInfo = {\n    uid: 0,\n    id: 0,\n    name: \"\",\n    charType: 0,\n    enhanceDurability: 3,\n    enhanceWarranty: 3,\n    weaponEnhance: 0,\n    highlight: false,\n    gameOver: false,\n  };\n  let highlight = false;\n  export let isAllGameOvered = false;\n  export let isGameStarted = false;\n  const MAX_ENHANCE = 11;\n  const progress = tweened(0);\n\n  function changeProgress(val) {\n    progress.set(val / MAX_ENHANCE);\n  }\n  GameAutoProcess.subscribe((value) => {\n    if (playerInfo.gameOver) {\n      highlight = playerInfo.highlight;\n    } else {\n      highlight = false;\n    }\n  });\n  $: changeProgress($GameSummary[playerInfo.id]);\n</script>\n\n<style>\n  progress {\n    display: block;\n    width: 100%;\n    overflow: hidden;\n    border: 0;\n    height: 100%;\n  }\n  div.wrapper {\n    width: 100%;\n    float: left;\n    height: 20px;\n    margin-bottom: 5px;\n  }\n  div.name, div.progress, div.image {\n    float: left;\n    overflow: hidden;\n    font-size: 12px;\n  }\n  div.name {\n    width: 70px;\n    text-overflow: ellipsis;\n    word-break: keep-all;\n    white-space: nowrap;\n  }\n  div.progress {\n    width: calc(100% - 90px);\n    height: 20px;\n  }\n  div.progress progress::-webkit-progress-bar {\n    background-color: white;\n  }\n  div.progress progress::-webkit-progress-value, div.progress progress::-webkit-progress-inner-element {\n    background-color: crimson !important;\n  }\n  div.image {\n    width: 20px;\n  }\n  div.wrapper[highlight=\"true\"] {\n    outline: 2px solid red;\n    opacity: 1 !important;\n  }\n  div.wrapper[isAllGameOvered=\"true\"] {\n    opacity: 0.5;\n  }\n</style>\n\n<div class=\"wrapper\" highlight={highlight} \nisAllGameOvered={isAllGameOvered && isGameStarted}>\n  <div class=\"name\">\n    <img\n      src={'./c' + playerInfo.charType + '.png'}\n      width=\"15\"\n      height=\"15\"\n      alt=\"\"\n    />\n    {playerInfo.name}\n  </div>\n  <div class=\"image\">\n    <WeaponImageSimple step={$GameSummary[playerInfo.id]} />\n  </div>\n  <div class=\"progress\">\n    <progress value={$progress}></progress>\n  </div>\n  <div style=\"clear:both;\"></div>\n</div>\n","<script>\r\n  import { tick } from 'svelte';\r\n  import PlayerCard from './PlayerCard.svelte';\r\n  import PlayerCardSimple from './PlayerCardSimple.svelte';\r\n  import {GameState, GameLifeCycle, GameAutoProcess, CharTypes} from './store';\r\n  import { randomRange } from './utils';\r\n  let GameLog = [];\r\n  let isGameStarted = false;\r\n  let isAllGameOvered = false;\r\n  let isRematch = false;\r\n  let playerNum = 4;\r\n  let winnerPlayers = [];\r\n  let winnerRank = 9999; // 9999 : the lowest\r\n  let uid = 0; // Unique IDs for players\r\n  let resultText = '';\r\n  let players = [];\r\n  let gameMode = 2;\r\n  let forceChar = 1;\r\n  $: updatePlayerNum(playerNum);\r\n  $: assignCharAccordingToGameMode(gameMode);\r\n\r\n  function assignCharAccordingToGameMode(gameMode) {\r\n    if (gameMode === 2) { // 동일 랜덤\r\n      forceChar = randomRange(1, CharTypes.length - 1);\r\n    }\r\n  }\r\n  function updatePlayerNum(playerNum) {\r\n    players = [];\r\n    for (let i = 0; i < playerNum; i++) {\r\n      players.push({\r\n        uid: uid,\r\n        id: i + 1,\r\n        name: '유저 #' + (i + 1),\r\n        charType: 0,\r\n        enhanceDurability: 3,\r\n        enhanceWarranty: 3,\r\n        weaponEnhance: 0,\r\n        highlight: false,\r\n        gameOver: false\r\n      });\r\n      uid++;\r\n    }\r\n  }\r\n  function handleGameOver() {\r\n    let isAllGameOver = true;\r\n    for (const player of players) {\r\n      if (player.gameOver === false) {\r\n        isAllGameOver = false;\r\n      }\r\n    }\r\n    if (isAllGameOver && !isAllGameOvered) {\r\n      isAllGameOvered = true;\r\n      let rank = 0;\r\n      let currentCheckingEnhance = 99999;\r\n      let bestEnhance = -1;\r\n      let worstEnhance = -1;\r\n      winnerPlayers = [];\r\n      let winnerPlayerNames = [];\r\n      resultText = '';\r\n      const sortedPlayers = [...players].sort(comparePlayers);\r\n      bestEnhance = sortedPlayers[0].weaponEnhance;\r\n      worstEnhance = sortedPlayers[sortedPlayers.length - 1].weaponEnhance;\r\n\r\n      for (const player of sortedPlayers) {\r\n        if (currentCheckingEnhance > player.weaponEnhance) { // 무기 강화 단계가 줄어들면, rank를 올린다. (시작 Rank: 1)\r\n          rank ++;\r\n          currentCheckingEnhance = player.weaponEnhance;\r\n        }\r\n        \r\n        if (winnerRank === 1) {\r\n          if (player.weaponEnhance === bestEnhance) {\r\n            winnerPlayers.push(player);\r\n            winnerPlayerNames.push(player.name);\r\n          }\r\n        } else if (winnerRank === 9999) {\r\n          if (player.weaponEnhance === worstEnhance) {\r\n            winnerPlayers.push(player);\r\n            winnerPlayerNames.push(player.name);\r\n          }\r\n        }\r\n        // resultText += `<b>${rank}등: ${player.name} 님</b> / `;\r\n        // resultText += `무기강화 결과: ${player.weaponEnhance}강<br>`;\r\n      }\r\n      GameLog.push(`------------------------------------------`);\r\n      if (winnerPlayers.length === 1) {\r\n        updateHighlight([winnerPlayers[0]]);\r\n        resultText += `<h4>${winnerPlayers[0].name} 님, ${winnerRank === 1 ? '1': '꼴'}등 축하드립니다.</h4>`;\r\n        resultText += `<b>달성한 강화도: ${winnerPlayers[0].weaponEnhance}</b><br>`;\r\n        resultText += '기분 좋은 마음으로 커피를 쏘면 어떨까요?';\r\n        GameLog.push(`게임 종료! ${winnerPlayers[0].name} 님, ${winnerRank === 1 ? '1': '꼴'}등 축하드립니다.`);\r\n        GameLog.push(`달성한 강화도: ${winnerPlayers[0].weaponEnhance}`);\r\n        GameLog.push(`기분 좋은 마음으로 커피를 쏘면 어떨까요?`);\r\n      } else {\r\n        updateHighlight(winnerPlayers);\r\n        resultText += `<h4>${winnerRank === 1 ? '1': '꼴'}등에 대한 동점자가 나왔군요!</h4><b>대상자: ` + winnerPlayerNames.join(' 님, ') + ' 님.</b><br>';\r\n        resultText += `<b>달성한 강화도: ${winnerPlayers[0].weaponEnhance}</b><br>`;\r\n        resultText += '동점자끼리 재경기를 원하시면 아래 버튼을 눌러주세요.';\r\n        isRematch = true;\r\n        GameLog.push(`게임 종료! ${winnerRank === 1 ? '1': '꼴'}등에 대한 동점자가 나왔습니다. ${winnerPlayerNames.join(' 님, ')}  님.`);\r\n        GameLog.push(`달성한 강화도: ${winnerPlayers[0].weaponEnhance}`);\r\n      }\r\n      GameLog = GameLog;\r\n    }\r\n  }\r\n  function updateHighlight(playerArr) {\r\n    for (const player of players) {\r\n      player.highlight = false;\r\n    }\r\n    for (let player of playerArr) {\r\n      player.highlight = true;\r\n    }\r\n    $GameAutoProcess++; // Update card... forcibly.\r\n  }\r\n  function comparePlayers(a, b) {\r\n    if (a.weaponEnhance > b.weaponEnhance) {\r\n      return -1;\r\n    }\r\n    if (a.weaponEnhance < b.weaponEnhance) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n  function timeout(ms) {\r\n      return new Promise(resolve => setTimeout(resolve, ms));\r\n  }\r\n</script>\r\n\r\n<style>\r\n  :global(body) {\r\n    \r\n    height: 100vh;\r\n    padding: 15px;\r\n  }\r\n  div.cardArea {\r\n    text-align: center;\r\n  }\r\n  div.resultArea {\r\n  }\r\n</style>\r\n\r\n{#if !isGameStarted}\r\n<h1>운빨망겜</h1> \r\n<p>\r\n당신의 운을 시험해서 승자가 되세요.<br>\r\n무기를 강화해 내기에서 승리하세요!\r\n</p>\r\n\r\n<label>\r\n  게임 인원 수:\r\n\t<input type=number bind:value={playerNum} min=1 max=30>\r\n\t<input type=range bind:value={playerNum} min=1 max=30 style=\"width:250px\">\r\n</label>\r\n<br>\r\n\r\n내기 등수:\r\n<label>\r\n  <input type=radio bind:group={winnerRank} value={1}>\r\n  1등\r\n</label>\r\n<label>\r\n  <input type=radio bind:group={winnerRank} value={9999}>\r\n  꼴등\r\n</label>\r\n<br>\r\n\r\n게임 모드:\r\n<label>\r\n  <input type=radio bind:group={gameMode} value={2}>\r\n  동일랜덤\r\n</label>\r\n<label>\r\n  <input type=radio bind:group={gameMode} value={0}>\r\n  올랜덤\r\n</label>\r\n<label>\r\n  <input type=radio bind:group={gameMode} value={-1}>\r\n  개인선택\r\n</label>\r\n<label>\r\n  <input type=radio bind:group={gameMode} value={1}>\r\n  동캐전\r\n  {#if gameMode == 1}\r\n  <select bind:value={forceChar}>\r\n    {#each CharTypes as charType}\r\n    {#if charType.id != 0}\r\n    <option value={charType.id}>{charType.name}</option>\r\n    {/if}\r\n    {/each}\r\n  </select>\r\n  {/if}\r\n</label>\r\n<br>\r\n<div class=\"btn btn-md btn-primary\" on:click={() => {\r\n  (async () => {\r\n    GameLog = [];\r\n    GameLog.push('게임이 시작되었습니다.');\r\n    await tick();\r\n    isGameStarted = true;\r\n    $GameState = GameLifeCycle.Started;\r\n  })();\r\n}}>\r\n<h5>\r\n게임 시작!\r\n</h5>\r\n</div>\r\n{/if}\r\n\r\n\r\n<div class=\"resultArea\">\r\n{#if isGameStarted}\r\n<div class=\"cardArea\">\r\n  {#each players as player (player.uid)}\r\n  <PlayerCardSimple playerInfo={player} isGameStarted={isGameStarted} handleGameOver={handleGameOver} gameMode={gameMode} forceChar={forceChar} {isAllGameOvered} GameLog={GameLog} />\r\n  {/each}\r\n</div>\r\n<div style=\"clear:both;\"></div>\r\n{/if}\r\n\r\n  {#if isAllGameOvered}\r\n  {@html resultText}\r\n  <br><br>\r\n  {#if isRematch}\r\n  <div class=\"btn btn-md btn-primary\" on:click={() => {\r\n    (async () => {\r\n      isAllGameOvered = false;\r\n      isGameStarted = true;\r\n      isRematch = false;\r\n      // To rematch: Add enhanceDurability!\r\n      winnerPlayers = winnerPlayers.map(player => {\r\n        player.enhanceDurability += 1;\r\n        player.highlight = false;\r\n        player.gameOver = false;\r\n        return player;\r\n      });\r\n      $GameState = GameLifeCycle.NotStarted;\r\n      $GameAutoProcess = 0;\r\n      players = winnerPlayers;\r\n      await tick();\r\n      GameLog = [];\r\n      GameLog.push('동점자 리매치가 시작되었습니다.');\r\n      GameLog = GameLog;\r\n    })();\r\n  }}>\r\n  <h2>동점자 리매치</h2>\r\n  동점자들끼리 내구도 1로 현재 상태에서 강화를 추가로 시도합니다.\r\n  </div>\r\n  {:else}\r\n  <div class=\"btn btn-md btn-danger\" on:click={() => {\r\n    isAllGameOvered = false;\r\n    isGameStarted = false;\r\n    isRematch = false;\r\n    $GameState = GameLifeCycle.NotStarted;\r\n    $GameAutoProcess = 0;\r\n    GameLog = [];\r\n    // To reset\r\n    updatePlayerNum(playerNum);\r\n    assignCharAccordingToGameMode(gameMode);\r\n  }}>\r\n  게임 재시작\r\n  </div>\r\n  {/if}\r\n  <hr>\r\n  {/if}\r\n  {#if isGameStarted && !isAllGameOvered && !$GameAutoProcess} \r\n  <div class=\"btn btn-lg btn-info\" on:click={() => {\r\n    (async () => {\r\n      while (!isAllGameOvered) {\r\n        GameLog.push(`------------ 자동진행 턴 #${$GameAutoProcess + 1} ------------`);\r\n        GameLog = GameLog;\r\n        $GameAutoProcess += 1;\r\n        await tick();\r\n        await timeout(1000);\r\n      }\r\n    })();\r\n  }}>\r\n  자동 진행\r\n  </div>\r\n  <hr>\r\n  {/if}\r\n</div>\r\n<div class=\"cardArea\">\r\n  {#each players as player (player.uid)}\r\n  <PlayerCard playerInfo={player} isGameStarted={isGameStarted} handleGameOver={handleGameOver} gameMode={gameMode} forceChar={forceChar} {isAllGameOvered} GameLog={GameLog} />\r\n  {/each}\r\n</div>\r\n{#if isGameStarted}\r\n<pre>{GameLog.join('\\n')}</pre>\r\n{/if}\r\n\r\n<br><br>\r\n{#if !isGameStarted}\r\n<h3>튜토리얼</h3>\r\n<ol>\r\n  <li>게임이 사직되면, 각 플레이어는 각 플레이어의 특성에 맞는 스탯을 부여 받습니다.</li>\r\n  <li>무기 강화를 시도하게 되면, 강화도가 1 상승하거나(성공), 유지되거나(실패), 하락할 수 있습니다(대실패).</li>\r\n  <li>각 플레이어는 무기의 내구도가 모두 소모될 때까지 강화를 계속 시도 해야 합니다.</li>\r\n  <li>모든 플레이어의 강화가 끝나면(=모든 플레이어의 무기 내구도가 모두 소모되면), 게임 시작시 설정한 순위의 사람이 당첨됩니다.</li>\r\n  <li>순위는 무기 강화도가 높은 사람이 높습니다. 만약 동점자가 있다면 동점자끼리 간이 재경기가 시작됩니다.</li>\r\n  <li>재경기 시에는 재경기에 돌입하는 사람들이 내구도 1을 추가로 받아 번외 경기가 시작됩니다.</li>\r\n  <li>게임이 시작되면 자동진행이 가능합니다. 자동진행시 모든 플레이어의 강화가 끝날 때까지 강화가 계속 시도 됩니다.</li>\r\n</ol>\r\n\r\n<h4>캐릭터 특성 설명</h4>\r\n<ul>\r\n  {#each CharTypes as CharType}\r\n  <li>{CharType.name}: {CharType.desc}</li>\r\n  {/each}\r\n</ul>\r\n\r\n<b>Ver.</b> 2020/12/21<br>\r\n<b>Made by</b> Readiz<br>\r\n<b>Special Thanks to</b> HG, Lim\r\n{/if}\r\n","import Svelte from './index.svelte';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nnew Svelte({\r\n  target: document.body\r\n});\r\n"],"names":["noop","identity","x","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","set_store_value","ret","value","set","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","to_number","set_data","wholeText","set_input_value","input","set_style","key","important","style","setProperty","select_option","select","option","__value","selected","select_value","selected_option","querySelector","HtmlTag","[object Object]","this","e","n","html","nodeName","t","h","innerHTML","Array","from","childNodes","current_component","set_current_component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","schedule_update","then","flush","tick","add_render_callback","flushing","seen_callbacks","update","pop","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","check_outros","transition_in","block","local","transition_out","o","outro_and_destroy_block","lookup","update_keyed_each","old_blocks","get_key","dynamic","list","destroy","create_each_block","next","get_context","old_indexes","new_blocks","new_lookup","Map","deltas","child_ctx","get","Math","abs","will_move","did_move","m","first","new_block","old_block","new_key","old_key","create_component","mount_component","on_mount","new_on_destroy","map","filter","destroy_component","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","skip_bound","ready","rest","fill","make_dirty","hydrate","nodes","children","l","intro","SvelteComponent","$destroy","type","index","indexOf","splice","$$props","obj","$$set","keys","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","s","invalidate","subscriber","GameLifeCycle","NotStated","Started","GameOver","GameState","GameAutoProcess","CharTypes","id","desc","GameSummary","randomRange","n1","n2","floor","random","step","width","path","durability","durabilityText","charType","weaponEnhance","gameOver","enhanceDurability","enhanceWarranty","round","playerInfo","uid","highlight","GameLog","isAllGameOvered","handleGameOver","isGameStarted","gameMode","forceChar","stepSuccessProb","EnhanceState","me","recentState","handleEnhancement","startGame","$GameSummary","is_date","prototype","toString","call","get_interpolator","isArray","Error","arr","bi","getTime","delta","interpolators","result","tweened","defaults","target_value","opts","previous_task","started","delay","duration","easing","linear","interpolate","abort","promise","fulfill","loop","elapsed","progress","val","join","comparePlayers","timeout","ms","setTimeout","isRematch","playerNum","winnerPlayers","winnerRank","resultText","players","assignCharAccordingToGameMode","updatePlayerNum","updateHighlight","playerArr","player","$GameAutoProcess","isAllGameOver","currentCheckingEnhance","bestEnhance","worstEnhance","winnerPlayerNames","sortedPlayers","sort","$GameState","NotStarted","body"],"mappings":"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"}